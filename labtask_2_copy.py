# -*- coding: utf-8 -*-
"""Labtask 2 Copy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UMK7WYIsN3F2rGrRy0gn256PdtntxLFS

##Task 01  --- pandas
Read from car.csv file. Take the first row as column names.

Identify (and save as list) numerical and non-numerical columns.(This will help in following steps).
"""

import pandas as pd
df = pd.read_csv('Cars93.txt', delimiter=',')

numerical_cols = list(df.select_dtypes(include=['int64', 'float64']).columns)
non_numerical_cols = list(df.select_dtypes(exclude=['int64', 'float64']).columns)

print('Numerical columns:', numerical_cols)
print('Non-numerical columns:', non_numerical_cols)

"""Using positions, print the number of Cylinders for the car in the 5th row."""

print(df.iloc[6]['Cylinders'])

"""Set the "	DriveTrain" column as index and sort descending with respect to it."""

import numpy as np
reverse = df.sort_values(by=
              ['DriveTrain'],
              inplace=True)
print(df)
np.flip(reverse)

"""##Task 02  --- numpy

 Minmax Scaler. This is another method to normalize the data between 0 and 1 using the following formula.

$$ x_{normalized} =\frac{x-x_{min}}{x_{max} -x_{min}} $$

For the following numpy array, apply this normalization technique. Round the results to 3 decimal digits



```
x = np.random.randint(120,size=30)
```


"""

import numpy as np

x = np.random.randint(120,size=30)

x_normalized = (x-0)*(100-0)
np.round(x_normalized)
print(x_normalized)

"""## Task 03

Draw box-plots for the numeric columns and differentitate them by 'Man.trans.avail' column.
"""

import matplotlib.pyplot as plt
df.hist(column=['Cylinders', 'Horsepower'])

# show the plot
plt.show()
df.boxplot(by='Man.trans.avail',figsize=(10,10))
plt.show()

"""## Task 04

For numerical column (Price, MPG.City, MPG.Highway, EngineSize,Turn.circle and differentiate), draw a scatterPlot.

Again draw same plot but this time drop Price and Turn.circle.  (Hint: Use drop() function).
"""

import matplotlib.pyplot as plt
import pandas as pd

# Assuming df is your DataFrame and it has been defined
numerical_columns = ['Price', 'MPG.City', 'MPG.Highway', 'EngineSize', 'Turn.circle', 'differentiate']

# Create scatter plots for each pair of numerical columns
for i in range(len(numerical_columns)):
    for j in range(i+1, len(numerical_columns)):
        plt.figure(figsize=(5, 5))
        plt.scatter(df[numerical_columns[i]], df[numerical_columns[j]])
        plt.xlabel(numerical_columns[i])
        plt.ylabel(numerical_columns[j])
        plt.title(f'{numerical_columns[i]} vs {numerical_columns[j]}')
        plt.show()

